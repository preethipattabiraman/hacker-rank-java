1. Can static functions be overloaded/overridden? 
A. Static functions can be overloaded, not overridden. If there is a similar function with the same signature in both base and derived classes, the base class method will be executed, derived class method is not taken into consideration.

2. Mutable/immutable
A. Immutable class in Java is a final class. Meaning, once an object is created, it cannot be changed. The variables are all private and final, there are no setters for the variables. There will be a constructor that will create a deep copy of the instance so that it cannot be modified by any references.

3. Beans
A. A Java Bean has private variables, must be serializable, public no-arg constructor, public getters/setters.

4. Singleton class
A. Only one object, for efficient memory/resource handling. Make the constructor private and create one getInstance() static method to return an instance of this Singleton class

5. throw vs throws
A. throw - used to throw one exception, from inside a function.
throws - used in signature to indicate what exceptions could be thrown by a function; can throw multiple exceptions

6. NoClassDefFoundError vs ClassNotFoundException
A. Note that the first one is error and second is an exception. Both are related to classpath issues. 
    NoClassDefFoundError - happens when the class is present at compile time but not able to find it in the classpath during runtime. This is derived from LinkageError. It is a fatal error. 
    ClassNotFoundException - happens when the class is loaded dynamically during runtime and the class loader is not able to find the specified class. This needs to be explicitly handled.
    
7. sychronized block vs synchronized method
A. sychronized method - synchronizing the object of the class; low performance; higher waiting time
    synchronized block - part of the method to be synchronized; high performance; lower waiting time\
    
8. StaleStateException
A. Happens in hibernate. Happens when a timestamp or versioning check failed - meaning it could be stale data.
Also happens when update/delete is tried to perform on data that may not exist

9. HashTable vs HashMap
A. Key-Value pair.
HashMap is not synchronized; HashTable is synchronized
HashMap allows for one key/one value null; HashTable does not
HashMap does not need hashCode and equals method implemented; HashTable should
Since no threads, faster but not safe; Since uses threads, safe but slower

